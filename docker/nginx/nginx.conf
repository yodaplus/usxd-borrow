worker_processes 1;

events {
  worker_connections 2000; # increase if you have lots of clients
  accept_mutex off; # set to 'on' if nginx worker_processes > 1
  use epoll; # Enable epoll for Linux 2.6+
  # 'use kqueue;' to enable for FreeBSD, OSX
}

http {
  include mime.types;
  # fallback in case we can't determine a type
  default_type application/octet-stream;
  sendfile on;

  upstream app_server {
    server nextjs:3000 fail_timeout=0;
    keepalive 32;
  }

  server {
    listen 80;

    return 301 https://$host$request_uri;
  }

  server {
    access_log off;
    listen 443 deferred;
    charset utf-8;
    keepalive_timeout 75s;

    location / {
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Host $host;
      # we don't want nginx trying to do something clever with
      # redirects, we set the Host: header above already.
      proxy_redirect off;
      proxy_pass http://app_server/;

      proxy_set_header X-Forwarded-Host $server_name;
      proxy_set_header X-Real-IP $remote_addr;
      add_header Front-End-Https on;
    }
  }
}
